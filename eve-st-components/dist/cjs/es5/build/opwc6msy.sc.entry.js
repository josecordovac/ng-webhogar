"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var evestcomponents_core_js_1 = require("../evestcomponents.core.js");
var EveStCheckbox = function () { function e() { this.checked = !1, this.errors = ""; } return e.prototype.getClasses = function () { return { "eve-input-checkbox": !0, checkmark: !0, "success-checkbox": "success" === this.color, "info-checkbox": "info" === this.color, "warning-checkbox": "warning" === this.color, "danger-checkbox": "danger" === this.color }; }, e.prototype.getStyles = function () { return { "background-color": this.customcolor, "border-color": this.customcolor, color: this.customcolor }; }, e.prototype.getClassesError = function () { return { "error-message": !!this.errors.length }; }, e.prototype.getStylesError = function () { return { color: this.customcolorerror }; }, e.prototype.elementClickHandler = function () { !1 === this.disabled && this.onChange.emit(!this.checked); }, e.prototype.render = function () { return evestcomponents_core_js_1.h("label", { class: "eve-ng-checkbox" }, this.label, evestcomponents_core_js_1.h("input", { id: this.name, name: this.name, type: "checkbox" }), evestcomponents_core_js_1.h("span", { class: this.getClasses(), style: this.getStyles() }), evestcomponents_core_js_1.h("div", { class: this.getClassesError(), style: this.getStylesError() }, this.errors)); }, Object.defineProperty(e, "is", { get: function () { return "eve-st-checkbox"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "encapsulation", { get: function () { return "shadow"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "properties", { get: function () { return { checked: { type: Boolean, attr: "checked", mutable: !0 }, color: { type: String, attr: "color" }, customcolor: { type: String, attr: "customcolor" }, customcolorerror: { type: String, attr: "customcolorerror" }, disabled: { type: Boolean, attr: "disabled" }, errors: { type: String, attr: "errors" }, label: { type: String, attr: "label" }, name: { type: String, attr: "name" } }; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "events", { get: function () { return [{ name: "onChange", method: "onChange", bubbles: !0, cancelable: !0, composed: !0 }]; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "listeners", { get: function () { return [{ name: "click", method: "elementClickHandler" }]; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "style", { get: function () { return ".sc-eve-st-checkbox::-webkit-scrollbar-track{border-radius:25px;background-color:#f5f5f5}.sc-eve-st-checkbox::-webkit-scrollbar{width:3px;background-color:#f5f5f5}.sc-eve-st-checkbox::-webkit-scrollbar-thumb{border-radius:25px;background-color:#cfcfcf}.sc-eve-st-checkbox-h{height:22px}.eve-ng-checkbox.sc-eve-st-checkbox{position:relative;height:20px;padding-left:28px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.eve-ng-checkbox.sc-eve-st-checkbox   .error-message.sc-eve-st-checkbox{color:#e24d4d;font-size:12px}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark.sc-eve-st-checkbox{position:absolute;top:0;left:0;height:22px;width:22px;background-color:#eee;border-radius:4px}.eve-ng-checkbox.sc-eve-st-checkbox:hover   input.sc-eve-st-checkbox ~ .checkmark.sc-eve-st-checkbox{background-color:#ccc}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.sc-eve-st-checkbox{background-color:main-color(500)}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.success-checkbox.sc-eve-st-checkbox{background:#5bc500}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.info-checkbox.sc-eve-st-checkbox{background:#00a9e0}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.warning-checkbox.sc-eve-st-checkbox{background:#ffb74d}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.danger-checkbox.sc-eve-st-checkbox{background:#e24d4d}.checkmark.sc-eve-st-checkbox:after{content:\"\";position:absolute;display:none}.eve-ng-checkbox.sc-eve-st-checkbox   input.sc-eve-st-checkbox:checked ~ .checkmark.sc-eve-st-checkbox:after{display:block}.eve-ng-checkbox.sc-eve-st-checkbox   .checkmark.sc-eve-st-checkbox:after{left:7px;top:1px;width:6px;height:14px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}"; }, enumerable: !0, configurable: !0 }), e; }();
exports.EveStCheckbox = EveStCheckbox;
